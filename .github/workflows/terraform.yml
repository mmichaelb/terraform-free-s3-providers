name: 'Terraform: Validate, lint and test'
on: [ push ]
jobs:
  terraform-validate-and-lint:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        provider: [ backblaze, cloudflare, oracle_cloud, scaleway ]
    env:
      working-directory: providers/${{ matrix.provider }}
    steps:
      - name: Checkout code
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4
      - name: Install terraform
        uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3
      - run: terraform version
      - run: terraform init
        working-directory: ${{ env.working-directory }}
      - run: terraform validate
        working-directory: ${{ env.working-directory }}
      - name: Setup tflint
        uses: terraform-linters/setup-tflint@19a52fbac37dacb22a09518e4ef6ee234f2d4987 # v4
        with:
          tflint_version: "latest"
      - run: tflint --version
      - run: tflint --recursive
        working-directory: ${{ env.working-directory }}
  terraform-tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        provider: [ backblaze, cloudflare, oracle_cloud, scaleway ]
    env:
      working-directory: providers/${{ matrix.provider }}/test
      terraform-workspace: test-${{ github.run_id }}
      SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4
      - name: Install terraform
        uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3
      - run: terraform version
      - run: terraform init
        working-directory: ${{ env.working-directory }}
      - run: terraform workspace new ${{ env.terraform-workspace }} || terraform workspace select ${{ env.terraform-workspace }}
        working-directory: ${{ env.working-directory }}
      - run: terraform plan
        working-directory: ${{ env.working-directory }}
      - run: terraform apply -auto-approve
        working-directory: ${{ env.working-directory }}
      - run: terraform destroy -auto-approve
        if: always()
        working-directory: ${{ env.working-directory }}
      - run: terraform workspace select default
        if: always()
        working-directory: ${{ env.working-directory }}
      - run: terraform workspace delete ${{ env.terraform-workspace }}
        if: always()
        working-directory: ${{ env.working-directory }}
